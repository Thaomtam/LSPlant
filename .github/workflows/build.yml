name: Build LSPlant Library

on:
  workflow_dispatch:

jobs:
  build:
    # Sử dụng Ubuntu 22.04 để tránh cảnh báo về `ubuntu-latest`
    runs-on: ubuntu-22.04

    steps:
      # Clone repository
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          submodules: true # Fetch submodules

      # Update submodules
      - name: Update submodules
        run: git submodule update --init --recursive

      # Setup environment for building with NDK
      - name: Setup Android NDK
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake unzip
          wget https://github.com/ninja-build/ninja/releases/download/v1.11.1/ninja-linux.zip
          unzip ninja-linux.zip -d /usr/local/bin/
          wget https://dl.google.com/android/repository/android-ndk-r23b-linux.zip
          unzip android-ndk-r23b-linux.zip -d $HOME
          export ANDROID_NDK_HOME=$HOME/android-ndk-r23b

      # Build LSPlant for arm64-v8a
      - name: Build LSPlant for arm64-v8a
        working-directory: ./lsplant/src/main/jni
        run: |
          mkdir -p build/output/arm64-v8a
          cmake -G Ninja \
                -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
                -DANDROID_ABI=arm64-v8a \
                -DANDROID_PLATFORM=android-34 \
                -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_LIBRARY_OUTPUT_DIRECTORY=build/output/arm64-v8a \
                -Bbuild -H.
          cmake --build build --target lsplant
          echo "Listing files for arm64-v8a:"
          ls -la build/output/arm64-v8a/

      # Rename arm64-v8a output
      - name: Rename arm64-v8a output
        working-directory: ./lsplant/src/main/jni
        run: mv build/output/arm64-v8a/liblsplant.so arm64-v8a-liblsplant.so

      # Build LSPlant for armeabi-v7a
      - name: Build LSPlant for armeabi-v7a
        working-directory: ./lsplant/src/main/jni
        run: |
          mkdir -p build/output/armeabi-v7a
          cmake -G Ninja \
                -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
                -DANDROID_ABI=armeabi-v7a \
                -DANDROID_PLATFORM=android-34 \
                -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_LIBRARY_OUTPUT_DIRECTORY=build/output/armeabi-v7a \
                -Bbuild -H.
          cmake --build build --target lsplant
          echo "Listing files for armeabi-v7a:"
          ls -la build/output/armeabi-v7a/

      # Rename armeabi-v7a output
      - name: Rename armeabi-v7a output
        working-directory: ./lsplant/src/main/jni
        run: mv build/output/armeabi-v7a/liblsplant.so armeabi-v7a-liblsplant.so

      # Store outputs
      - name: Upload built libraries
        uses: actions/upload-artifact@v3
        with:
          name: lsplant-libraries
          path: |
            lsplant/src/main/jni/arm64-v8a-liblsplant.so
            lsplant/src/main/jni/armeabi-v7a-liblsplant.so
